<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="10" total="60" passed="49">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="17465" started-at="2015-05-21T00:12:21Z" finished-at="2015-05-21T00:12:38Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="17465" started-at="2015-05-21T00:12:21Z" finished-at="2015-05-21T00:12:38Z">
      <class name="ReviewAndInformation.Respository.dangerPlacesRepoTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:ReviewAndInformation.Respository.dangerPlacesRepoTest@99860f]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:ReviewAndInformation.Respository.dangerPlacesRepoTest@99860f]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="5" started-at="2015-05-21T02:12:35Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.dangerPlacesRepoTest@99860f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.dangerPlacesRepoTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testCreate()[pri:0, instance:ReviewAndInformation.Respository.dangerPlacesRepoTest@99860f]" name="testCreate" duration-ms="9" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.dangerPlacesRepoTest@99860f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.dangerPlacesRepoTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.dangerPlacesRepoTest@99860f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.dangerPlacesRepoTest.testRead() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testRead()[pri:0, instance:ReviewAndInformation.Respository.dangerPlacesRepoTest@99860f]" name="testRead" duration-ms="5" started-at="2015-05-21T02:12:37Z" depends-on-methods="ReviewAndInformation.Respository.dangerPlacesRepoTest.testCreate" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRead -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.dangerPlacesRepoTest@99860f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.dangerPlacesRepoTest.testRead() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.dangerPlacesRepoTest@99860f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.dangerPlacesRepoTest.testUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testUpdate()[pri:0, instance:ReviewAndInformation.Respository.dangerPlacesRepoTest@99860f]" name="testUpdate" duration-ms="18" started-at="2015-05-21T02:12:38Z" depends-on-methods="ReviewAndInformation.Respository.dangerPlacesRepoTest.testRead" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.dangerPlacesRepoTest@99860f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.dangerPlacesRepoTest.testUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.dangerPlacesRepoTest@99860f]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.dangerPlacesRepoTest.testDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testDelete()[pri:0, instance:ReviewAndInformation.Respository.dangerPlacesRepoTest@99860f]" name="testDelete" duration-ms="23" started-at="2015-05-21T02:12:38Z" depends-on-methods="ReviewAndInformation.Respository.dangerPlacesRepoTest.testUpdate" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelete -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.dangerPlacesRepoTest@99860f]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.dangerPlacesRepoTest.testDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:ReviewAndInformation.Respository.dangerPlacesRepoTest@99860f]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- ReviewAndInformation.Respository.dangerPlacesRepoTest -->
      <class name="ReviewAndInformation.Services.GoToPlacesServiceTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:ReviewAndInformation.Services.GoToPlacesServiceTest@19cf00a]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:ReviewAndInformation.Services.GoToPlacesServiceTest@19cf00a]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="5" started-at="2015-05-21T02:12:35Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="testCreate()[pri:0, instance:ReviewAndInformation.Services.GoToPlacesServiceTest@19cf00a]" name="testCreate" duration-ms="21" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.GoToPlacesServiceTest@19cf00a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.GoToPlacesServiceTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.GoToPlacesServiceTest@19cf00a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.GoToPlacesServiceTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.GoToPlacesServiceTest@19cf00a]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.GoToPlacesServiceTest.testGetCityInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="testGetCityInfo()[pri:0, instance:ReviewAndInformation.Services.GoToPlacesServiceTest@19cf00a]" name="testGetCityInfo" duration-ms="500" started-at="2015-05-21T02:12:37Z" depends-on-methods="ReviewAndInformation.Services.GoToPlacesServiceTest.testCreate" finished-at="2015-05-21T02:12:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at ReviewAndInformation.Services.GoToPlacesServiceTest.testGetCityInfo(GoToPlacesServiceTest.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:171)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:689)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCityInfo -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.GoToPlacesServiceTest@19cf00a]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.GoToPlacesServiceTest.testGetCityInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:ReviewAndInformation.Services.GoToPlacesServiceTest@19cf00a]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- ReviewAndInformation.Services.GoToPlacesServiceTest -->
      <class name="ReviewAndInformation.Respository.cityInfoRepoTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:ReviewAndInformation.Respository.cityInfoRepoTest@1b5438d]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:ReviewAndInformation.Respository.cityInfoRepoTest@1b5438d]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="5" started-at="2015-05-21T02:12:35Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.cityInfoRepoTest@1b5438d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.cityInfoRepoTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testCreate()[pri:0, instance:ReviewAndInformation.Respository.cityInfoRepoTest@1b5438d]" name="testCreate" duration-ms="19" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.cityInfoRepoTest@1b5438d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.cityInfoRepoTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.cityInfoRepoTest@1b5438d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.cityInfoRepoTest.testRead() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testRead()[pri:0, instance:ReviewAndInformation.Respository.cityInfoRepoTest@1b5438d]" name="testRead" duration-ms="4" started-at="2015-05-21T02:12:37Z" depends-on-methods="ReviewAndInformation.Respository.cityInfoRepoTest.testCreate" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRead -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.cityInfoRepoTest@1b5438d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.cityInfoRepoTest.testRead() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.cityInfoRepoTest@1b5438d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.cityInfoRepoTest.testUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testUpdate()[pri:0, instance:ReviewAndInformation.Respository.cityInfoRepoTest@1b5438d]" name="testUpdate" duration-ms="25" started-at="2015-05-21T02:12:38Z" depends-on-methods="ReviewAndInformation.Respository.cityInfoRepoTest.testRead" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.cityInfoRepoTest@1b5438d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.cityInfoRepoTest.testUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.cityInfoRepoTest@1b5438d]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.cityInfoRepoTest.testDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testDelete()[pri:0, instance:ReviewAndInformation.Respository.cityInfoRepoTest@1b5438d]" name="testDelete" duration-ms="20" started-at="2015-05-21T02:12:38Z" depends-on-methods="ReviewAndInformation.Respository.cityInfoRepoTest.testUpdate" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelete -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.cityInfoRepoTest@1b5438d]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.cityInfoRepoTest.testDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:ReviewAndInformation.Respository.cityInfoRepoTest@1b5438d]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- ReviewAndInformation.Respository.cityInfoRepoTest -->
      <class name="ReviewAndInformation.Respository.GoToPlacesRepoTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:ReviewAndInformation.Respository.GoToPlacesRepoTest@1b979c0]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="15" started-at="2015-05-21T02:12:21Z" finished-at="2015-05-21T02:12:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:ReviewAndInformation.Respository.GoToPlacesRepoTest@1b979c0]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="14426" started-at="2015-05-21T02:12:21Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.GoToPlacesRepoTest@1b979c0]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.GoToPlacesRepoTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testCreate()[pri:0, instance:ReviewAndInformation.Respository.GoToPlacesRepoTest@1b979c0]" name="testCreate" duration-ms="227" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.GoToPlacesRepoTest@1b979c0]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.GoToPlacesRepoTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="testRead()[pri:0, instance:ReviewAndInformation.Respository.GoToPlacesRepoTest@1b979c0]" name="testRead" duration-ms="107" started-at="2015-05-21T02:12:37Z" depends-on-methods="ReviewAndInformation.Respository.GoToPlacesRepoTest.testCreate" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRead -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.GoToPlacesRepoTest@1b979c0]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.GoToPlacesRepoTest.testRead() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.GoToPlacesRepoTest@1b979c0]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.GoToPlacesRepoTest.testRead() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="testUpdate()[pri:0, instance:ReviewAndInformation.Respository.GoToPlacesRepoTest@1b979c0]" name="testUpdate" duration-ms="155" started-at="2015-05-21T02:12:37Z" depends-on-methods="ReviewAndInformation.Respository.GoToPlacesRepoTest.testRead" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdate -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.GoToPlacesRepoTest@1b979c0]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.GoToPlacesRepoTest.testUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.GoToPlacesRepoTest@1b979c0]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.GoToPlacesRepoTest.testUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.GoToPlacesRepoTest@1b979c0]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.GoToPlacesRepoTest.testDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testDelete()[pri:0, instance:ReviewAndInformation.Respository.GoToPlacesRepoTest@1b979c0]" name="testDelete" duration-ms="44" started-at="2015-05-21T02:12:38Z" depends-on-methods="ReviewAndInformation.Respository.GoToPlacesRepoTest.testUpdate" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelete -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:ReviewAndInformation.Respository.GoToPlacesRepoTest@1b979c0]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.GoToPlacesRepoTest@1b979c0]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.GoToPlacesRepoTest.testDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
      </class> <!-- ReviewAndInformation.Respository.GoToPlacesRepoTest -->
      <class name="ReviewAndInformation.Respository.movieRepoTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:ReviewAndInformation.Respository.movieRepoTest@713a72]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:ReviewAndInformation.Respository.movieRepoTest@713a72]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="6" started-at="2015-05-21T02:12:35Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="testCreate()[pri:0, instance:ReviewAndInformation.Respository.movieRepoTest@713a72]" name="testCreate" duration-ms="78" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.movieRepoTest@713a72]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.movieRepoTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.movieRepoTest@713a72]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.movieRepoTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.movieRepoTest@713a72]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.movieRepoTest.testRead() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testRead()[pri:0, instance:ReviewAndInformation.Respository.movieRepoTest@713a72]" name="testRead" duration-ms="6" started-at="2015-05-21T02:12:37Z" depends-on-methods="ReviewAndInformation.Respository.movieRepoTest.testCreate" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRead -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.movieRepoTest@713a72]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.movieRepoTest.testRead() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.movieRepoTest@713a72]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.movieRepoTest.testUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testUpdate()[pri:0, instance:ReviewAndInformation.Respository.movieRepoTest@713a72]" name="testUpdate" duration-ms="56" started-at="2015-05-21T02:12:38Z" depends-on-methods="ReviewAndInformation.Respository.movieRepoTest.testRead" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.movieRepoTest@713a72]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.movieRepoTest.testUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.movieRepoTest@713a72]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.movieRepoTest.testDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testDelete()[pri:0, instance:ReviewAndInformation.Respository.movieRepoTest@713a72]" name="testDelete" duration-ms="23" started-at="2015-05-21T02:12:38Z" depends-on-methods="ReviewAndInformation.Respository.movieRepoTest.testUpdate" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelete -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.movieRepoTest@713a72]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.movieRepoTest.testDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:ReviewAndInformation.Respository.movieRepoTest@713a72]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- ReviewAndInformation.Respository.movieRepoTest -->
      <class name="ReviewAndInformation.Respository.placeMovieSetRepoTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:ReviewAndInformation.Respository.placeMovieSetRepoTest@1df0310]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:ReviewAndInformation.Respository.placeMovieSetRepoTest@1df0310]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="5" started-at="2015-05-21T02:12:36Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.placeMovieSetRepoTest@1df0310]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="5" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.placeMovieSetRepoTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testCreate()[pri:0, instance:ReviewAndInformation.Respository.placeMovieSetRepoTest@1df0310]" name="testCreate" duration-ms="11" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.placeMovieSetRepoTest@1df0310]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.placeMovieSetRepoTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.placeMovieSetRepoTest@1df0310]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.placeMovieSetRepoTest.testRead() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testRead()[pri:0, instance:ReviewAndInformation.Respository.placeMovieSetRepoTest@1df0310]" name="testRead" duration-ms="5" started-at="2015-05-21T02:12:37Z" depends-on-methods="ReviewAndInformation.Respository.placeMovieSetRepoTest.testCreate" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRead -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.placeMovieSetRepoTest@1df0310]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.placeMovieSetRepoTest.testRead() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.placeMovieSetRepoTest@1df0310]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.placeMovieSetRepoTest.testUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testUpdate()[pri:0, instance:ReviewAndInformation.Respository.placeMovieSetRepoTest@1df0310]" name="testUpdate" duration-ms="15" started-at="2015-05-21T02:12:38Z" depends-on-methods="ReviewAndInformation.Respository.placeMovieSetRepoTest.testRead" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.placeMovieSetRepoTest@1df0310]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.placeMovieSetRepoTest.testUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.placeMovieSetRepoTest@1df0310]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.placeMovieSetRepoTest.testDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testDelete()[pri:0, instance:ReviewAndInformation.Respository.placeMovieSetRepoTest@1df0310]" name="testDelete" duration-ms="19" started-at="2015-05-21T02:12:38Z" depends-on-methods="ReviewAndInformation.Respository.placeMovieSetRepoTest.testUpdate" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelete -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.placeMovieSetRepoTest@1df0310]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.placeMovieSetRepoTest.testDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:ReviewAndInformation.Respository.placeMovieSetRepoTest@1df0310]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- ReviewAndInformation.Respository.placeMovieSetRepoTest -->
      <class name="ReviewAndInformation.Services.singerServiceTest">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:ReviewAndInformation.Services.singerServiceTest@161eccb]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="6" started-at="2015-05-21T02:12:37Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:ReviewAndInformation.Services.singerServiceTest@161eccb]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="testCreate()[pri:0, instance:ReviewAndInformation.Services.singerServiceTest@161eccb]" name="testCreate" duration-ms="41" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.singerServiceTest@161eccb]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.singerServiceTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.singerServiceTest@161eccb]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.singerServiceTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.singerServiceTest@161eccb]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.singerServiceTest.testGetCityInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="testGetCityInfo()[pri:0, instance:ReviewAndInformation.Services.singerServiceTest@161eccb]" name="testGetCityInfo" duration-ms="15" started-at="2015-05-21T02:12:37Z" depends-on-methods="ReviewAndInformation.Services.singerServiceTest.testCreate" finished-at="2015-05-21T02:12:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at ReviewAndInformation.Services.singerServiceTest.testGetCityInfo(singerServiceTest.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:171)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:689)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCityInfo -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.singerServiceTest@161eccb]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.singerServiceTest.testGetCityInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:ReviewAndInformation.Services.singerServiceTest@161eccb]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- ReviewAndInformation.Services.singerServiceTest -->
      <class name="ReviewAndInformation.Respository.producerRepoTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:ReviewAndInformation.Respository.producerRepoTest@163b102]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:ReviewAndInformation.Respository.producerRepoTest@163b102]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="5" started-at="2015-05-21T02:12:36Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="testCreate()[pri:0, instance:ReviewAndInformation.Respository.producerRepoTest@163b102]" name="testCreate" duration-ms="169" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.producerRepoTest@163b102]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.producerRepoTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.producerRepoTest@163b102]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.producerRepoTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.producerRepoTest@163b102]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.producerRepoTest.testRead() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testRead()[pri:0, instance:ReviewAndInformation.Respository.producerRepoTest@163b102]" name="testRead" duration-ms="6" started-at="2015-05-21T02:12:37Z" depends-on-methods="ReviewAndInformation.Respository.producerRepoTest.testCreate" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRead -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.producerRepoTest@163b102]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.producerRepoTest.testRead() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="testUpdate()[pri:0, instance:ReviewAndInformation.Respository.producerRepoTest@163b102]" name="testUpdate" duration-ms="17" started-at="2015-05-21T02:12:38Z" depends-on-methods="ReviewAndInformation.Respository.producerRepoTest.testRead" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdate -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.producerRepoTest@163b102]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.producerRepoTest.testUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.producerRepoTest@163b102]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.producerRepoTest.testUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.producerRepoTest@163b102]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.producerRepoTest.testDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testDelete()[pri:0, instance:ReviewAndInformation.Respository.producerRepoTest@163b102]" name="testDelete" duration-ms="19" started-at="2015-05-21T02:12:38Z" depends-on-methods="ReviewAndInformation.Respository.producerRepoTest.testUpdate" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelete -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:ReviewAndInformation.Respository.producerRepoTest@163b102]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.producerRepoTest@163b102]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.producerRepoTest.testDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
      </class> <!-- ReviewAndInformation.Respository.producerRepoTest -->
      <class name="ReviewAndInformation.Services.placeMovieSetServiceTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:ReviewAndInformation.Services.placeMovieSetServiceTest@699df5]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:ReviewAndInformation.Services.placeMovieSetServiceTest@699df5]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="12" started-at="2015-05-21T02:12:36Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="testCreate()[pri:0, instance:ReviewAndInformation.Services.placeMovieSetServiceTest@699df5]" name="testCreate" duration-ms="53" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.placeMovieSetServiceTest@699df5]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.placeMovieSetServiceTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.placeMovieSetServiceTest@699df5]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.placeMovieSetServiceTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.placeMovieSetServiceTest@699df5]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.placeMovieSetServiceTest.testGetCityInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="testGetCityInfo()[pri:0, instance:ReviewAndInformation.Services.placeMovieSetServiceTest@699df5]" name="testGetCityInfo" duration-ms="8" started-at="2015-05-21T02:12:37Z" depends-on-methods="ReviewAndInformation.Services.placeMovieSetServiceTest.testCreate" finished-at="2015-05-21T02:12:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at ReviewAndInformation.Services.placeMovieSetServiceTest.testGetCityInfo(placeMovieSetServiceTest.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:171)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:689)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCityInfo -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.placeMovieSetServiceTest@699df5]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.placeMovieSetServiceTest.testGetCityInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:ReviewAndInformation.Services.placeMovieSetServiceTest@699df5]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- ReviewAndInformation.Services.placeMovieSetServiceTest -->
      <class name="ReviewAndInformation.Respository.musicTypeRepoTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:ReviewAndInformation.Respository.musicTypeRepoTest@2b7632]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:ReviewAndInformation.Respository.musicTypeRepoTest@2b7632]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="6" started-at="2015-05-21T02:12:36Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.musicTypeRepoTest@2b7632]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.musicTypeRepoTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testCreate()[pri:0, instance:ReviewAndInformation.Respository.musicTypeRepoTest@2b7632]" name="testCreate" duration-ms="72" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.musicTypeRepoTest@2b7632]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.musicTypeRepoTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="testRead()[pri:0, instance:ReviewAndInformation.Respository.musicTypeRepoTest@2b7632]" name="testRead" duration-ms="5" started-at="2015-05-21T02:12:37Z" depends-on-methods="ReviewAndInformation.Respository.musicTypeRepoTest.testCreate" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRead -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.musicTypeRepoTest@2b7632]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.musicTypeRepoTest.testRead() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.musicTypeRepoTest@2b7632]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.musicTypeRepoTest.testRead() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="testUpdate()[pri:0, instance:ReviewAndInformation.Respository.musicTypeRepoTest@2b7632]" name="testUpdate" duration-ms="15" started-at="2015-05-21T02:12:38Z" depends-on-methods="ReviewAndInformation.Respository.musicTypeRepoTest.testRead" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdate -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.musicTypeRepoTest@2b7632]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.musicTypeRepoTest.testUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.musicTypeRepoTest@2b7632]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.musicTypeRepoTest.testUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.musicTypeRepoTest@2b7632]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.musicTypeRepoTest.testDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testDelete()[pri:0, instance:ReviewAndInformation.Respository.musicTypeRepoTest@2b7632]" name="testDelete" duration-ms="25" started-at="2015-05-21T02:12:38Z" depends-on-methods="ReviewAndInformation.Respository.musicTypeRepoTest.testUpdate" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelete -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.musicTypeRepoTest@2b7632]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.musicTypeRepoTest.testDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:ReviewAndInformation.Respository.musicTypeRepoTest@2b7632]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- ReviewAndInformation.Respository.musicTypeRepoTest -->
      <class name="ReviewAndInformation.Services.cityInfoServiceTest">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:ReviewAndInformation.Services.cityInfoServiceTest@1664cde]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="15" started-at="2015-05-21T02:12:35Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:ReviewAndInformation.Services.cityInfoServiceTest@1664cde]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="testCreate()[pri:0, instance:ReviewAndInformation.Services.cityInfoServiceTest@1664cde]" name="testCreate" duration-ms="55" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.cityInfoServiceTest@1664cde]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.cityInfoServiceTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:ReviewAndInformation.Services.cityInfoServiceTest@1664cde]" name="setUp" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.cityInfoServiceTest@1664cde]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.cityInfoServiceTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.cityInfoServiceTest@1664cde]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.cityInfoServiceTest.testGetCityInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="testGetCityInfo()[pri:0, instance:ReviewAndInformation.Services.cityInfoServiceTest@1664cde]" name="testGetCityInfo" duration-ms="10" started-at="2015-05-21T02:12:37Z" depends-on-methods="ReviewAndInformation.Services.cityInfoServiceTest.testCreate" finished-at="2015-05-21T02:12:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at ReviewAndInformation.Services.cityInfoServiceTest.testGetCityInfo(cityInfoServiceTest.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:171)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:689)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCityInfo -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:ReviewAndInformation.Services.cityInfoServiceTest@1664cde]" name="setUp" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.cityInfoServiceTest@1664cde]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.cityInfoServiceTest.testGetCityInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:ReviewAndInformation.Services.cityInfoServiceTest@1664cde]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- ReviewAndInformation.Services.cityInfoServiceTest -->
      <class name="ReviewAndInformation.Respository.directorRepoTest">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:ReviewAndInformation.Respository.directorRepoTest@1392356]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="6" started-at="2015-05-21T02:12:35Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:ReviewAndInformation.Respository.directorRepoTest@1392356]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.directorRepoTest@1392356]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.directorRepoTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testCreate()[pri:0, instance:ReviewAndInformation.Respository.directorRepoTest@1392356]" name="testCreate" duration-ms="14" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.directorRepoTest@1392356]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.directorRepoTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.directorRepoTest@1392356]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.directorRepoTest.testRead() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testRead()[pri:0, instance:ReviewAndInformation.Respository.directorRepoTest@1392356]" name="testRead" duration-ms="6" started-at="2015-05-21T02:12:37Z" depends-on-methods="ReviewAndInformation.Respository.directorRepoTest.testCreate" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRead -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.directorRepoTest@1392356]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.directorRepoTest.testRead() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.directorRepoTest@1392356]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.directorRepoTest.testUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testUpdate()[pri:0, instance:ReviewAndInformation.Respository.directorRepoTest@1392356]" name="testUpdate" duration-ms="22" started-at="2015-05-21T02:12:38Z" depends-on-methods="ReviewAndInformation.Respository.directorRepoTest.testRead" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.directorRepoTest@1392356]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.directorRepoTest.testUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.directorRepoTest@1392356]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.directorRepoTest.testDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testDelete()[pri:0, instance:ReviewAndInformation.Respository.directorRepoTest@1392356]" name="testDelete" duration-ms="18" started-at="2015-05-21T02:12:38Z" depends-on-methods="ReviewAndInformation.Respository.directorRepoTest.testUpdate" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelete -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.directorRepoTest@1392356]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.directorRepoTest.testDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:ReviewAndInformation.Respository.directorRepoTest@1392356]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- ReviewAndInformation.Respository.directorRepoTest -->
      <class name="ReviewAndInformation.Respository.singerRepoTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:ReviewAndInformation.Respository.singerRepoTest@17d24b6]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:ReviewAndInformation.Respository.singerRepoTest@17d24b6]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="10" started-at="2015-05-21T02:12:36Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.singerRepoTest@17d24b6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.singerRepoTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testCreate()[pri:0, instance:ReviewAndInformation.Respository.singerRepoTest@17d24b6]" name="testCreate" duration-ms="54" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.singerRepoTest@17d24b6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.singerRepoTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.singerRepoTest@17d24b6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.singerRepoTest.testRead() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testRead()[pri:0, instance:ReviewAndInformation.Respository.singerRepoTest@17d24b6]" name="testRead" duration-ms="5" started-at="2015-05-21T02:12:37Z" depends-on-methods="ReviewAndInformation.Respository.singerRepoTest.testCreate" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRead -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.singerRepoTest@17d24b6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.singerRepoTest.testRead() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.singerRepoTest@17d24b6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.singerRepoTest.testUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testUpdate()[pri:0, instance:ReviewAndInformation.Respository.singerRepoTest@17d24b6]" name="testUpdate" duration-ms="20" started-at="2015-05-21T02:12:38Z" depends-on-methods="ReviewAndInformation.Respository.singerRepoTest.testRead" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.singerRepoTest@17d24b6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.singerRepoTest.testUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.singerRepoTest@17d24b6]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.singerRepoTest.testDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testDelete()[pri:0, instance:ReviewAndInformation.Respository.singerRepoTest@17d24b6]" name="testDelete" duration-ms="19" started-at="2015-05-21T02:12:38Z" depends-on-methods="ReviewAndInformation.Respository.singerRepoTest.testUpdate" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelete -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.singerRepoTest@17d24b6]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.singerRepoTest.testDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:ReviewAndInformation.Respository.singerRepoTest@17d24b6]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- ReviewAndInformation.Respository.singerRepoTest -->
      <class name="ReviewAndInformation.Services.recordLabelServiceTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:ReviewAndInformation.Services.recordLabelServiceTest@2c3fbb]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:ReviewAndInformation.Services.recordLabelServiceTest@2c3fbb]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="5" started-at="2015-05-21T02:12:36Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.recordLabelServiceTest@2c3fbb]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.recordLabelServiceTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testCreate()[pri:0, instance:ReviewAndInformation.Services.recordLabelServiceTest@2c3fbb]" name="testCreate" duration-ms="122" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.recordLabelServiceTest@2c3fbb]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.recordLabelServiceTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="FAIL" signature="testGetCityInfo()[pri:0, instance:ReviewAndInformation.Services.recordLabelServiceTest@2c3fbb]" name="testGetCityInfo" duration-ms="17" started-at="2015-05-21T02:12:37Z" depends-on-methods="ReviewAndInformation.Services.recordLabelServiceTest.testCreate" finished-at="2015-05-21T02:12:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at ReviewAndInformation.Services.recordLabelServiceTest.testGetCityInfo(recordLabelServiceTest.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:171)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:689)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCityInfo -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.recordLabelServiceTest@2c3fbb]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.recordLabelServiceTest.testGetCityInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.recordLabelServiceTest@2c3fbb]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.recordLabelServiceTest.testGetCityInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:ReviewAndInformation.Services.recordLabelServiceTest@2c3fbb]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- ReviewAndInformation.Services.recordLabelServiceTest -->
      <class name="ReviewAndInformation.Services.directorServiceTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:ReviewAndInformation.Services.directorServiceTest@38d341]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:ReviewAndInformation.Services.directorServiceTest@38d341]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="5" started-at="2015-05-21T02:12:35Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.directorServiceTest@38d341]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.directorServiceTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testCreate()[pri:0, instance:ReviewAndInformation.Services.directorServiceTest@38d341]" name="testCreate" duration-ms="20" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.directorServiceTest@38d341]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.directorServiceTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.directorServiceTest@38d341]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.directorServiceTest.testGetCityInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="testGetCityInfo()[pri:0, instance:ReviewAndInformation.Services.directorServiceTest@38d341]" name="testGetCityInfo" duration-ms="13" started-at="2015-05-21T02:12:37Z" depends-on-methods="ReviewAndInformation.Services.directorServiceTest.testCreate" finished-at="2015-05-21T02:12:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at ReviewAndInformation.Services.directorServiceTest.testGetCityInfo(directorServiceTest.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:171)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:689)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCityInfo -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.directorServiceTest@38d341]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.directorServiceTest.testGetCityInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:ReviewAndInformation.Services.directorServiceTest@38d341]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- ReviewAndInformation.Services.directorServiceTest -->
      <class name="ReviewAndInformation.Respository.recordLabelRepoTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:ReviewAndInformation.Respository.recordLabelRepoTest@b34bf3]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:ReviewAndInformation.Respository.recordLabelRepoTest@b34bf3]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="5" started-at="2015-05-21T02:12:36Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="testCreate()[pri:0, instance:ReviewAndInformation.Respository.recordLabelRepoTest@b34bf3]" name="testCreate" duration-ms="30" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.recordLabelRepoTest@b34bf3]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.recordLabelRepoTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.recordLabelRepoTest@b34bf3]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.recordLabelRepoTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.recordLabelRepoTest@b34bf3]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.recordLabelRepoTest.testRead() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testRead()[pri:0, instance:ReviewAndInformation.Respository.recordLabelRepoTest@b34bf3]" name="testRead" duration-ms="7" started-at="2015-05-21T02:12:37Z" depends-on-methods="ReviewAndInformation.Respository.recordLabelRepoTest.testCreate" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRead -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.recordLabelRepoTest@b34bf3]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.recordLabelRepoTest.testRead() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.recordLabelRepoTest@b34bf3]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.recordLabelRepoTest.testUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testUpdate()[pri:0, instance:ReviewAndInformation.Respository.recordLabelRepoTest@b34bf3]" name="testUpdate" duration-ms="13" started-at="2015-05-21T02:12:38Z" depends-on-methods="ReviewAndInformation.Respository.recordLabelRepoTest.testRead" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.recordLabelRepoTest@b34bf3]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.recordLabelRepoTest.testUpdate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.recordLabelRepoTest@b34bf3]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.recordLabelRepoTest.testDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testDelete()[pri:0, instance:ReviewAndInformation.Respository.recordLabelRepoTest@b34bf3]" name="testDelete" duration-ms="18" started-at="2015-05-21T02:12:38Z" depends-on-methods="ReviewAndInformation.Respository.recordLabelRepoTest.testUpdate" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDelete -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Respository.recordLabelRepoTest@b34bf3]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Respository.recordLabelRepoTest.testDelete() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:ReviewAndInformation.Respository.recordLabelRepoTest@b34bf3]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:38Z" finished-at="2015-05-21T02:12:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- ReviewAndInformation.Respository.recordLabelRepoTest -->
      <class name="ReviewAndInformation.Services.musicTypeServiceTest">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:ReviewAndInformation.Services.musicTypeServiceTest@1142653]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="4" started-at="2015-05-21T02:12:36Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:ReviewAndInformation.Services.musicTypeServiceTest@1142653]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="testCreate()[pri:0, instance:ReviewAndInformation.Services.musicTypeServiceTest@1142653]" name="testCreate" duration-ms="22" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.musicTypeServiceTest@1142653]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.musicTypeServiceTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.musicTypeServiceTest@1142653]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.musicTypeServiceTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="FAIL" signature="testGetCityInfo()[pri:0, instance:ReviewAndInformation.Services.musicTypeServiceTest@1142653]" name="testGetCityInfo" duration-ms="10" started-at="2015-05-21T02:12:37Z" depends-on-methods="ReviewAndInformation.Services.musicTypeServiceTest.testCreate" finished-at="2015-05-21T02:12:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at ReviewAndInformation.Services.musicTypeServiceTest.testGetCityInfo(musicTypeServiceTest.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:171)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:689)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCityInfo -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.musicTypeServiceTest@1142653]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.musicTypeServiceTest.testGetCityInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:ReviewAndInformation.Services.musicTypeServiceTest@1142653]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.musicTypeServiceTest@1142653]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.musicTypeServiceTest.testGetCityInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
      </class> <!-- ReviewAndInformation.Services.musicTypeServiceTest -->
      <class name="ReviewAndInformation.Services.dangerPlacesServiceTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:ReviewAndInformation.Services.dangerPlacesServiceTest@1aa89eb]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:ReviewAndInformation.Services.dangerPlacesServiceTest@1aa89eb]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="18" started-at="2015-05-21T02:12:35Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:ReviewAndInformation.Services.dangerPlacesServiceTest@1aa89eb]" name="setUp" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.dangerPlacesServiceTest@1aa89eb]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.dangerPlacesServiceTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testCreate()[pri:0, instance:ReviewAndInformation.Services.dangerPlacesServiceTest@1aa89eb]" name="testCreate" duration-ms="11" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.dangerPlacesServiceTest@1aa89eb]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:35Z" finished-at="2015-05-21T02:12:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.dangerPlacesServiceTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.dangerPlacesServiceTest@1aa89eb]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.dangerPlacesServiceTest.testGetCityInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:ReviewAndInformation.Services.dangerPlacesServiceTest@1aa89eb]" name="setUp" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testGetCityInfo()[pri:0, instance:ReviewAndInformation.Services.dangerPlacesServiceTest@1aa89eb]" name="testGetCityInfo" duration-ms="12" started-at="2015-05-21T02:12:37Z" depends-on-methods="ReviewAndInformation.Services.dangerPlacesServiceTest.testCreate" finished-at="2015-05-21T02:12:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at ReviewAndInformation.Services.dangerPlacesServiceTest.testGetCityInfo(dangerPlacesServiceTest.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:171)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:689)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCityInfo -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.dangerPlacesServiceTest@1aa89eb]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.dangerPlacesServiceTest.testGetCityInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:ReviewAndInformation.Services.dangerPlacesServiceTest@1aa89eb]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- ReviewAndInformation.Services.dangerPlacesServiceTest -->
      <class name="ReviewAndInformation.Services.movieServiceTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:ReviewAndInformation.Services.movieServiceTest@16efb90]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:ReviewAndInformation.Services.movieServiceTest@16efb90]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="10" started-at="2015-05-21T02:12:36Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.movieServiceTest@16efb90]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.movieServiceTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="testCreate()[pri:0, instance:ReviewAndInformation.Services.movieServiceTest@16efb90]" name="testCreate" duration-ms="306" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <exception class="org.springframework.dao.DataIntegrityViolationException">
            <message>
              <![CDATA[could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:255)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:221)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:417)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:59)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:213)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:147)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodIntercceptor.invoke(CrudMethodMetadataPostProcessor.java:122)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207)
	at com.sun.proxy.$Proxy72.save(Unknown Source)
	at ReviewAndInformation.Services.movieServiceTest.testCreate(movieServiceTest.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:171)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:689)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:72)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:49)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:126)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:112)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:211)
	at org.hibernate.id.IdentityGenerator$GetGeneratedKeysDelegate.executeAndExtract(IdentityGenerator.java:96)
	at org.hibernate.id.insert.AbstractReturningDelegate.performInsert(AbstractReturningDelegate.java:58)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3032)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3558)
	at org.hibernate.action.internal.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:98)
	at org.hibernate.engine.spi.ActionQueue.execute(ActionQueue.java:492)
	at org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:197)
	at org.hibernate.engine.spi.ActionQueue.addInsertAction(ActionQueue.java:181)
	at org.hibernate.engine.spi.ActionQueue.addAction(ActionQueue.java:216)
	at org.hibernate.event.internal.AbstractSaveEventListener.addInsertAction(AbstractSaveEventListener.java:324)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:288)
	at org.hibernate.event.internal.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:194)
	at org.hibernate.event.internal.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:125)
	at org.hibernate.jpa.event.internal.core.JpaPersistEventListener.saveWithGeneratedId(JpaPersistEventListener.java:84)
	at org.hibernate.event.internal.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:206)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:149)
	at org.hibernate.event.internal.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:75)
	at org.hibernate.internal.SessionImpl.firePersist(SessionImpl.java:811)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:784)
	at org.hibernate.internal.SessionImpl.persist(SessionImpl.java:789)
	at org.hibernate.jpa.spi.AbstractEntityManagerImpl.persist(AbstractEntityManagerImpl.java:1181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:291)
	at com.sun.proxy.$Proxy60.persist(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.save(SimpleJpaRepository.java:407)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.executeMethodOn(RepositoryFactorySupport.java:416)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:401)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:373)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:281)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)
	... 45 more
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '84' for key 'UK_ok7xex41a4p0dr5unwpmdrbeu'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:526)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:389)
	at com.mysql.jdbc.Util.getInstance(Util.java:372)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:973)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3835)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3771)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2435)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2582)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2535)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1911)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2145)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2081)
	at com.mysql.jdbc.PreparedStatement.executeUpdate(PreparedStatement.java:2066)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:208)
	... 86 more
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.dao.DataIntegrityViolationException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.movieServiceTest@16efb90]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.movieServiceTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:ReviewAndInformation.Services.movieServiceTest@16efb90]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="SKIP" signature="testGetCityInfo()[pri:0, instance:ReviewAndInformation.Services.movieServiceTest@16efb90]" name="testGetCityInfo" duration-ms="0" started-at="2015-05-21T02:12:37Z" depends-on-methods="ReviewAndInformation.Services.movieServiceTest.testCreate" finished-at="2015-05-21T02:12:37Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method movieServiceTest.testGetCityInfo()[pri:0, instance:ReviewAndInformation.Services.movieServiceTest@16efb90] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method movieServiceTest.testGetCityInfo()[pri:0, instance:ReviewAndInformation.Services.movieServiceTest@16efb90] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1099)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCityInfo -->
      </class> <!-- ReviewAndInformation.Services.movieServiceTest -->
      <class name="ReviewAndInformation.Services.producerServiceTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:ReviewAndInformation.Services.producerServiceTest@1d3c2fa]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="2" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:ReviewAndInformation.Services.producerServiceTest@1d3c2fa]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="8" started-at="2015-05-21T02:12:36Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.producerServiceTest@1d3c2fa]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.producerServiceTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testCreate()[pri:0, instance:ReviewAndInformation.Services.producerServiceTest@1d3c2fa]" name="testCreate" duration-ms="21" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreate -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.producerServiceTest@1d3c2fa]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:36Z" finished-at="2015-05-21T02:12:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.producerServiceTest.testCreate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.producerServiceTest@1d3c2fa]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.producerServiceTest.testGetCityInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="testGetCityInfo()[pri:0, instance:ReviewAndInformation.Services.producerServiceTest@1d3c2fa]" name="testGetCityInfo" duration-ms="9" started-at="2015-05-21T02:12:37Z" depends-on-methods="ReviewAndInformation.Services.producerServiceTest.testCreate" finished-at="2015-05-21T02:12:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at ReviewAndInformation.Services.producerServiceTest.testGetCityInfo(producerServiceTest.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:171)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:689)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:882)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1189)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:124)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:70)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:158)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:98)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCityInfo -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:ReviewAndInformation.Services.producerServiceTest@1d3c2fa]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void ReviewAndInformation.Services.producerServiceTest.testGetCityInfo() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:ReviewAndInformation.Services.producerServiceTest@1d3c2fa]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2015-05-21T02:12:37Z" finished-at="2015-05-21T02:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- ReviewAndInformation.Services.producerServiceTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
